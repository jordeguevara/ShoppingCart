/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ShoppingSysstem;

import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author jordeguevara
 */
public class ShoppingCartWindow extends javax.swing.JFrame {

    private double total;
    Customer customer;
    public List<Customer> customer_database = new ArrayList<Customer>();
    public ShoppingCartWindow shoppingWindow;
    CheckoutWindow checkout;
    private int current_order;
    private int orderNumber;
    private double total_price;

    /**
     * Creates new form ShoppingCartWindow
     */
    public ShoppingCartWindow(){
        initComponents();
    }
    
    public int getOrderNumber() {
        return current_order;
    }
    
    public int getIncrementNumber(){
        return orderNumber;
    }
    
    /* Increments order number*/
    public void incrementOrderNumber() {
        orderNumber++;
    }
    
    /* Calculates total price */
    public double getTotalPrice(double beef, double orange, double carrot, double apple, double onion, double banana) {
        

        double beef_price_per_pound = Double.parseDouble(beef_price_label.getText());
        double orange_price_per_pound = Double.parseDouble(orange_price_label.getText());
        double carrot_price_per_pound = Double.parseDouble(carrot_price_label.getText());
        double apple_price_per_pound = Double.parseDouble(apple_price_label.getText());
        double onion_price_per_pound = Double.parseDouble(onion_price_label.getText());
        double banana_price_per_pound = Double.parseDouble(banana_price_label.getText());

        double total_beef_cost = beef * beef_price_per_pound;
        double total_orange_cost = orange * orange_price_per_pound;
        double total_carrot_cost = carrot * carrot_price_per_pound;
        double total_apple_cost = apple * apple_price_per_pound;
        double total_onion_cost = onion * onion_price_per_pound;
        double total_banana_cost = banana * banana_price_per_pound;

        total_price = total_beef_cost + total_orange_cost + total_carrot_cost + total_apple_cost + total_onion_cost + total_banana_cost;

        return total_price;

    }
    
    public double getTotalPrice(){
        return total_price;
    }

    public double getTotal() {
        return total;
    }
    
    /* displays items in customer_database array */
    public void addCustomerData(List<Customer> customer_database) {
        System.out.println("====CURRENT DATABASE=====");
        this.customer_database = customer_database;
        for (int i = 0; i < customer_database.size(); i++) {
            
            System.out.println(customer_database.get(i));
        }
    }
    
    /*Resets all textfields and totalprice label */
    public void clearCart(){
        beef_input.setText("");
        carrot_input.setText("");
        onion_input.setText("");
        apple_input.setText("");
        banana_input.setText("");
        orange_input.setText("");
        total_price_label.setText("0.0");
        
    }
    
    /* if textfield values are empty sets text to 0 */
    public void checkEmptyInput(){
         if (beef_input.getText().equals("")) {
            beef_input.setText("0.0");
        }
        if (orange_input.getText().equals("")) {
            orange_input.setText("0.0");
        }
        if (carrot_input.getText().equals("")) {
            carrot_input.setText("0.0");
        }
        if (apple_input.getText().equals("")) {
            apple_input.setText("0.0");
        }
        if (banana_input.getText().equals("")) {
            banana_input.setText("0.0");
        }
        if (onion_input.getText().equals("")) {
            onion_input.setText("0.0");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        item_label = new javax.swing.JLabel();
        price_label = new javax.swing.JLabel();
        pound_label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        beef_price_label = new javax.swing.JLabel();
        orange_price_label = new javax.swing.JLabel();
        carrot_price_label = new javax.swing.JLabel();
        banana_price_label = new javax.swing.JLabel();
        apple_price_label = new javax.swing.JLabel();
        onion_price_label = new javax.swing.JLabel();
        orange_input = new javax.swing.JTextField();
        beef_input = new javax.swing.JTextField();
        carrot_input = new javax.swing.JTextField();
        banana_input = new javax.swing.JTextField();
        apple_input = new javax.swing.JTextField();
        onion_input = new javax.swing.JTextField();
        totalButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        search_button = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        checkout_button = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        total_price_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        item_label.setText("Item");

        price_label.setText("Price Per Pound");

        pound_label.setText("Pounds");

        jLabel1.setText("Beef");

        jLabel2.setText("Orange");

        jLabel3.setText("Carrots");

        jLabel4.setText("Banana");

        jLabel5.setText("Apple");

        jLabel6.setText("Onions");

        beef_price_label.setText("5");

        orange_price_label.setText("2");

        carrot_price_label.setText("2");

        banana_price_label.setText("1.50");
        banana_price_label.setPreferredSize(new java.awt.Dimension(8, 15));
        banana_price_label.setRequestFocusEnabled(false);
        banana_price_label.setSize(new java.awt.Dimension(45, 15));

        apple_price_label.setText("2.30");
        apple_price_label.setPreferredSize(new java.awt.Dimension(8, 15));
        apple_price_label.setSize(new java.awt.Dimension(45, 15));

        onion_price_label.setText("1.80");
        onion_price_label.setPreferredSize(new java.awt.Dimension(8, 15));
        onion_price_label.setSize(new java.awt.Dimension(45, 15));

        totalButton.setText("Calculate total");
        totalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        search_button.setText("Search");
        search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_buttonActionPerformed(evt);
            }
        });

        clear_button.setText("Reset");
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });

        checkout_button.setText("Checkout");
        checkout_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkout_buttonActionPerformed(evt);
            }
        });

        jLabel7.setText("$");

        total_price_label.setText("0.00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(1, 1, 1))
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(item_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(price_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pound_label))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(onion_price_label, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                    .addComponent(apple_price_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(banana_price_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(carrot_price_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(orange_price_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(beef_price_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(orange_input, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(carrot_input, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(banana_input, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(apple_input, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(beef_input, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(onion_input, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(totalButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total_price_label)
                        .addGap(30, 30, 30)))
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkout_button)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(item_label)
                    .addComponent(price_label)
                    .addComponent(pound_label))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(beef_price_label, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(beef_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orange_price_label)
                            .addComponent(orange_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(carrot_price_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(carrot_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(banana_price_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(banana_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apple_price_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(apple_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(onion_price_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(onion_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalButton)
                    .addComponent(jLabel7)
                    .addComponent(total_price_label))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(search_button)
                    .addComponent(clear_button)
                    .addComponent(checkout_button))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* output total price to user when calcuate button is pressed */
    private void totalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalButtonActionPerformed
        // TODO add your handling code here:
        double beef;
        double carrot;
        double onion;
        double apple;
        double orange;
        double banana;

       checkEmptyInput(); // checks if input is 0 
         try {
            beef = Double.parseDouble(beef_input.getText());
            orange = Double.parseDouble(orange_input.getText());
            carrot = Double.parseDouble(carrot_input.getText());
            apple = Double.parseDouble(apple_input.getText());
            banana = Double.parseDouble(banana_input.getText());
            onion = Double.parseDouble(onion_input.getText());
        
            total = getTotalPrice(beef, orange, carrot, apple, onion, banana);
      }
      catch(NumberFormatException e) {
          JOptionPane.showMessageDialog(null, "Incorret Input! Numbers only", "test.com", JOptionPane.ERROR_MESSAGE);

      }
         
        DecimalFormat df = new DecimalFormat(".##");
        df.setRoundingMode(RoundingMode.HALF_UP);
        String total_price_string = df.format(total);

        total_price_label.setText(total_price_string);
    }//GEN-LAST:event_totalButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void checkout_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkout_buttonActionPerformed
        // TODO add your handling code here:
        checkout = new CheckoutWindow(this, customer_database,total_price);
        checkout.setVisible(true);
    }//GEN-LAST:event_checkout_buttonActionPerformed

    private void search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_buttonActionPerformed
        // TODO add your handling code here:
        SearchWindow searchWindow = new SearchWindow(this, customer_database);
        searchWindow.setVisible(true);
    }//GEN-LAST:event_search_buttonActionPerformed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed
        // TODO add your handling code here:
        clearCart();
    }//GEN-LAST:event_clear_buttonActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShoppingCartWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShoppingCartWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShoppingCartWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShoppingCartWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShoppingCartWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apple_input;
    private javax.swing.JLabel apple_price_label;
    private javax.swing.JTextField banana_input;
    private javax.swing.JLabel banana_price_label;
    private javax.swing.JTextField beef_input;
    private javax.swing.JLabel beef_price_label;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField carrot_input;
    private javax.swing.JLabel carrot_price_label;
    private javax.swing.JButton checkout_button;
    private javax.swing.JButton clear_button;
    private javax.swing.JLabel item_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField onion_input;
    private javax.swing.JLabel onion_price_label;
    private javax.swing.JTextField orange_input;
    private javax.swing.JLabel orange_price_label;
    private javax.swing.JLabel pound_label;
    private javax.swing.JLabel price_label;
    private javax.swing.JButton search_button;
    private javax.swing.JButton totalButton;
    private javax.swing.JLabel total_price_label;
    // End of variables declaration//GEN-END:variables

}
